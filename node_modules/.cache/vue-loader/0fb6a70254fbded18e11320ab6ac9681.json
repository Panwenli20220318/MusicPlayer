{"remainingRequest":"C:\\Users\\潘文丽\\Desktop\\hmplayer\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\潘文丽\\Desktop\\hmplayer\\src\\views\\05.result.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\潘文丽\\Desktop\\hmplayer\\src\\views\\05.result.vue","mtime":1583669023491},{"path":"C:\\Users\\潘文丽\\Desktop\\hmplayer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648539724301},{"path":"C:\\Users\\潘文丽\\Desktop\\hmplayer\\node_modules\\babel-loader\\lib\\index.js","mtime":1648539726411},{"path":"C:\\Users\\潘文丽\\Desktop\\hmplayer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648539724301},{"path":"C:\\Users\\潘文丽\\Desktop\\hmplayer\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8vIOWvvOWFpSBhaXhvcwppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAncmVzdWx0JywKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgLy8gdGFi5YiH5o2i5pe2IOS8muaUueWPmOeahOaVsOaNrgogICAgICBhY3RpdmVJbmRleDogJ3NvbmdzJywKICAgICAgLy8g5L+d5a2YIOafpeivouatjOabsgogICAgICBzb25nTGlzdDogW10sCiAgICAgIC8vIOS/neWtmOatjOWNleeahOWtl+autQogICAgICBwbGF5bGlzdHM6IFtdLAogICAgICAvLyDkv53lrZhtdueahOWtl+autQogICAgICBtdjogW10sCiAgICAgIC8vIOaQnOe0oue7k+aenOeahOaAu+aVsAogICAgICBjb3VudDogMAogICAgfQogIH0sCiAgLy8g55Sf5ZG95ZGo5pyf6ZKp5a2QIOWbnuiwg+WHveaVsAogIGNyZWF0ZWQoKSB7CiAgICBheGlvcyh7CiAgICAgIHVybDogJ2h0dHBzOi8vYXV0dW1uZmlzaC5jbi9zZWFyY2gnLAogICAgICBtZXRob2Q6ICdnZXQnLAogICAgICBwYXJhbXM6IHsKICAgICAgICBrZXl3b3JkczogdGhpcy4kcm91dGUucXVlcnkucSwKICAgICAgICB0eXBlOiAxLAogICAgICAgIC8vIOiOt+WPlueahOaVsOaNrumHjwogICAgICAgIGxpbWl0OiAxMAogICAgICB9CiAgICB9KS50aGVuKHJlcyA9PiB7CiAgICAgIGNvbnNvbGUubG9nKHJlcykKICAgICAgdGhpcy5zb25nTGlzdCA9IHJlcy5kYXRhLnJlc3VsdC5zb25ncwogICAgICAvLyDorqHnrpfmrYzmm7Lml7bpl7QKICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLnNvbmdMaXN0Lmxlbmd0aDsgaSsrKSB7CiAgICAgICAgbGV0IG1pbiA9IHBhcnNlSW50KHRoaXMuc29uZ0xpc3RbaV0uZHVyYXRpb24gLyAxMDAwIC8gNjApCiAgICAgICAgbGV0IHNlYyA9IHBhcnNlSW50KCh0aGlzLnNvbmdMaXN0W2ldLmR1cmF0aW9uIC8gMTAwMCkgJSA2MCkKICAgICAgICBpZiAobWluIDwgMTApIHsKICAgICAgICAgIG1pbiA9ICcwJyArIG1pbgogICAgICAgIH0KICAgICAgICBpZiAoc2VjIDwgMTApIHsKICAgICAgICAgIHNlYyA9ICcwJyArIHNlYwogICAgICAgIH0KICAgICAgICAvLyBjb25zb2xlLmxvZyhtaW4gKyAnfCcgKyBzZWMpCiAgICAgICAgdGhpcy5zb25nTGlzdFtpXS5kdXJhdGlvbiA9IG1pbiArICc6JyArIHNlYwogICAgICB9CiAgICAgIC8vIOS/neWtmOaAu+aVsAogICAgICB0aGlzLmNvdW50ID0gcmVzLmRhdGEucmVzdWx0LnNvbmdDb3VudAogICAgfSkKICB9LAogIC8vIOS+puWQrOWZqAogIHdhdGNoOiB7CiAgICBhY3RpdmVJbmRleCgpIHsKICAgICAgLy8gc29uZ3Mg5q2M5puyCiAgICAgIC8vIGxpc3RzIOatjOWNlQogICAgICAvLyBtdiAgICBtdgogICAgICBsZXQgdHlwZSA9IDEKCiAgICAgIC8vIOiOt+WPluS4quaVsAogICAgICBsZXQgbGltaXQgPSAxMAogICAgICBzd2l0Y2ggKHRoaXMuYWN0aXZlSW5kZXgpIHsKICAgICAgICBjYXNlICdzb25ncyc6CiAgICAgICAgICB0eXBlID0gMQogICAgICAgICAgbGltaXQgPSAxMAogICAgICAgICAgYnJlYWsKICAgICAgICBjYXNlICdsaXN0cyc6CiAgICAgICAgICB0eXBlID0gMTAwMAogICAgICAgICAgbGltaXQgPSAxMAogICAgICAgICAgYnJlYWsKICAgICAgICBjYXNlICdtdic6CiAgICAgICAgICB0eXBlID0gMTAwNAogICAgICAgICAgbGltaXQgPSA4CiAgICAgICAgICBicmVhawoKICAgICAgICBkZWZhdWx0OgogICAgICAgICAgYnJlYWsKICAgICAgfQoKICAgICAgYXhpb3MoewogICAgICAgIHVybDogJ2h0dHBzOi8vYXV0dW1uZmlzaC5jbi9zZWFyY2gnLAogICAgICAgIG1ldGhvZDogJ2dldCcsCiAgICAgICAgcGFyYW1zOiB7CiAgICAgICAgICBrZXl3b3JkczogdGhpcy4kcm91dGUucXVlcnkucSwKICAgICAgICAgIHR5cGUsIC8vIHR5cGU6dHlwZSwKICAgICAgICAgIC8vIOiOt+WPlueahOaVsOaNrumHjwogICAgICAgICAgbGltaXQgLy8gbGltaXQ6IGxpbWl0CiAgICAgICAgfQogICAgICB9KS50aGVuKHJlcyA9PiB7CiAgICAgICAgY29uc29sZS5sb2cocmVzKQogICAgICAgIC8vIOiOt+WPluatjOabsgogICAgICAgIGlmICh0eXBlID09IDEpIHsKICAgICAgICAgIC8vIOatjOabsgogICAgICAgICAgdGhpcy5zb25nTGlzdCA9IHJlcy5kYXRhLnJlc3VsdC5zb25ncwogICAgICAgICAgLy8g6K6h566X5q2M5puy5pe26Ze0CiAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuc29uZ0xpc3QubGVuZ3RoOyBpKyspIHsKICAgICAgICAgICAgbGV0IG1pbiA9IHBhcnNlSW50KHRoaXMuc29uZ0xpc3RbaV0uZHVyYXRpb24gLyAxMDAwIC8gNjApCiAgICAgICAgICAgIGxldCBzZWMgPSBwYXJzZUludCgodGhpcy5zb25nTGlzdFtpXS5kdXJhdGlvbiAvIDEwMDApICUgNjApCiAgICAgICAgICAgIGlmIChtaW4gPCAxMCkgewogICAgICAgICAgICAgIG1pbiA9ICcwJyArIG1pbgogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmIChzZWMgPCAxMCkgewogICAgICAgICAgICAgIHNlYyA9ICcwJyArIHNlYwogICAgICAgICAgICB9CiAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKG1pbiArICd8JyArIHNlYykKICAgICAgICAgICAgdGhpcy5zb25nTGlzdFtpXS5kdXJhdGlvbiA9IG1pbiArICc6JyArIHNlYwogICAgICAgICAgfQogICAgICAgICAgLy8g5L+d5a2Y5oC75pWwCiAgICAgICAgICB0aGlzLmNvdW50ID0gcmVzLmRhdGEucmVzdWx0LnNvbmdDb3VudAogICAgICAgIH0KICAgICAgICAvLyDojrflj5Yg5q2M5Y2VCiAgICAgICAgZWxzZSBpZiAodHlwZSA9PSAxMDAwKSB7CiAgICAgICAgICAvLyDmrYzljZXnmoTpgLvovpEKICAgICAgICAgIHRoaXMucGxheWxpc3RzID0gcmVzLmRhdGEucmVzdWx0LnBsYXlsaXN0cwogICAgICAgICAgLy8g5oC75pWwCiAgICAgICAgICB0aGlzLmNvdW50ID0gcmVzLmRhdGEucmVzdWx0LnBsYXlsaXN0Q291bnQKICAgICAgICAgIC8vIOWkhOeQhiDmkq3mlL7mrKHmlbAKICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5wbGF5bGlzdHMubGVuZ3RoOyBpKyspIHsKICAgICAgICAgICAgaWYgKHRoaXMucGxheWxpc3RzW2ldLnBsYXlDb3VudCA+IDEwMDAwMCkgewogICAgICAgICAgICAgIHRoaXMucGxheWxpc3RzW2ldLnBsYXlDb3VudCA9CiAgICAgICAgICAgICAgICBwYXJzZUludCh0aGlzLnBsYXlsaXN0c1tpXS5wbGF5Q291bnQgLyAxMDAwMCkgKyAn5LiHJwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIC8vIOS/neWtmG125pWw5o2uCiAgICAgICAgICB0aGlzLm12ID0gcmVzLmRhdGEucmVzdWx0Lm12cwogICAgICAgICAgLy8g5oC75pWwCiAgICAgICAgICB0aGlzLmNvdW50ID0gcmVzLmRhdGEucmVzdWx0Lm12Q291bnQKICAgICAgICAgIC8vIOWkhOeQhuaVsOaNrgogICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLm12Lmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICAgIC8vIOaXtumXtAogICAgICAgICAgICBsZXQgbWluID0gcGFyc2VJbnQodGhpcy5tdltpXS5kdXJhdGlvbiAvIDEwMDAgLyA2MCkKICAgICAgICAgICAgbGV0IHNlYyA9IHBhcnNlSW50KCh0aGlzLm12W2ldLmR1cmF0aW9uIC8gMTAwMCkgJSA2MCkKICAgICAgICAgICAgaWYgKG1pbiA8IDEwKSB7CiAgICAgICAgICAgICAgbWluID0gJzAnICsgbWluCiAgICAgICAgICAgIH0KICAgICAgICAgICAgaWYgKHNlYyA8IDEwKSB7CiAgICAgICAgICAgICAgc2VjID0gJzAnICsgc2VjCiAgICAgICAgICAgIH0KICAgICAgICAgICAgdGhpcy5tdltpXS5kdXJhdGlvbiA9IG1pbiArICc6JyArIHNlYwoKICAgICAgICAgICAgLy8g5pKt5pS+5qyh5pWwCiAgICAgICAgICAgIGlmICh0aGlzLm12W2ldLnBsYXlDb3VudCA+IDEwMDAwMCkgewogICAgICAgICAgICAgIHRoaXMubXZbaV0ucGxheUNvdW50ID0KICAgICAgICAgICAgICAgIHBhcnNlSW50KHRoaXMubXZbaV0ucGxheUNvdW50IC8gMTAwMDApICsgJ+S4hycKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSkKICAgIH0KICB9LAogIC8vIOaWueazlQogIG1ldGhvZHM6IHsKICAgIC8vIOWOu2126K+m5oOF6aG1CiAgICB0b01WKGlkKXsKICAgICAgdGhpcy4kcm91dGVyLnB1c2goYC9tdj9xPSR7aWR9YCkKICAgIH0sCiAgICAvLyDljrvmrYzljZXor6bmg4XpobUKICAgIHRvUGxheWxpc3QoaWQpewogICAgICAvLyDot7PovazlubbmkLrluKbmlbDmja7ljbPlj68KICAgICAgdGhpcy4kcm91dGVyLnB1c2goYC9wbGF5bGlzdD9xPSR7aWR9YCkKICAgIH0sCiAgICBwbGF5TXVzaWMoaWQpIHsKICAgICAgYXhpb3MoewogICAgICAgIHVybDogJ2h0dHBzOi8vYXV0dW1uZmlzaC5jbi9zb25nL3VybCcsCiAgICAgICAgbWV0aG9kOiAnZ2V0JywKICAgICAgICBwYXJhbXM6IHsKICAgICAgICAgIGlkIC8vIGlkOmlkCiAgICAgICAgfQogICAgICB9KS50aGVuKHJlcyA9PiB7CiAgICAgICAgLy8gY29uc29sZS5sb2cocmVzKQogICAgICAgIGxldCB1cmwgPSByZXMuZGF0YS5kYXRhWzBdLnVybAogICAgICAgIC8vIGNvbnNvbGUubG9nKHRoaXMuJHBhcmVudC5tdXNpY1VybCkKICAgICAgICAvLyDorr7nva7nu5nniLbnu4Tku7bnmoQg5pKt5pS+5Zyw5Z2ACiAgICAgICAgdGhpcy4kcGFyZW50Lm11c2ljVXJsID0gdXJsCiAgICAgIH0pCiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["05.result.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"05.result.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div class=\"result-container\">\r\n    <div class=\"title-wrap\">\r\n      <!-- 标题 -->\r\n      <h2 class=\"title\">{{ $route.query.q }}</h2>\r\n      <span class=\"sub-title\">找到 {{ count }} 个结果</span>\r\n    </div>\r\n    <el-tabs v-model=\"activeIndex\">\r\n      <el-tab-pane label=\"歌曲\" name=\"songs\">\r\n        <table class=\"el-table\">\r\n          <thead>\r\n            <th></th>\r\n            <th>音乐标题</th>\r\n            <th>歌手</th>\r\n            <th>专辑</th>\r\n            <th>时长</th>\r\n          </thead>\r\n          <tbody>\r\n            <tr\r\n              v-for=\"(item, index) in songList\"\r\n              :key=\"index\"\r\n              class=\"el-table__row\"\r\n              @dblclick=\"playMusic(item.id)\"\r\n            >\r\n              <td>1</td>\r\n              <td>\r\n                <div class=\"song-wrap\">\r\n                  <div class=\"name-wrap\">\r\n                    <!-- 歌名 -->\r\n                    <span>{{ item.name }}</span>\r\n                    <!-- mv的图标 -->\r\n                    <span v-if=\"item.mvid != 0\" class=\"iconfont icon-mv\"></span>\r\n                  </div>\r\n                  <!-- 二级标题 -->\r\n                  <span v-if=\"item.alias.length != 0\">{{ item.alias[0] }}</span>\r\n                </div>\r\n              </td>\r\n              <td>{{ item.artists[0].name }}</td>\r\n              <td>{{ item.album.name }}</td>\r\n              <td>{{ item.duration }}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </el-tab-pane>\r\n      <el-tab-pane label=\"歌单\" name=\"lists\">\r\n        <div class=\"items\">\r\n          <div\r\n            v-for=\"(item, index) in playlists\"\r\n            :key=\"index\"\r\n            class=\"item\"\r\n            @click=\"toPlaylist(item.id)\"\r\n          >\r\n            <div class=\"img-wrap\">\r\n              <div class=\"num-wrap\">\r\n                播放量:\r\n                <span class=\"num\">{{ item.playCount }}</span>\r\n              </div>\r\n              <img :src=\"item.coverImgUrl\" alt=\"\" />\r\n              <span class=\"iconfont icon-play\"></span>\r\n            </div>\r\n            <p class=\"name\">{{ item.name }}</p>\r\n          </div>\r\n        </div>\r\n      </el-tab-pane>\r\n      <el-tab-pane label=\"MV\" name=\"mv\">\r\n        <div class=\"items mv\">\r\n          <div v-for=\"(item, index) in mv\" :key=\"index\" class=\"item\" @click=\"toMV(item.id)\">\r\n            <div class=\"img-wrap\">\r\n              <!-- 封面 -->\r\n              <img :src=\"item.cover\" alt=\"\" />\r\n              <span class=\"iconfont icon-play\"></span>\r\n              <div class=\"num-wrap\">\r\n                <div class=\"iconfont icon-play\"></div>\r\n                <!-- 播放次数 -->\r\n                <div class=\"num\">{{ item.playCount }}</div>\r\n              </div>\r\n              <!-- 持续时间 -->\r\n              <span class=\"time\">{{ item.duration }}</span>\r\n            </div>\r\n            <div class=\"info-wrap\">\r\n              <!-- mv名 -->\r\n              <div class=\"name\">{{ item.name }}</div>\r\n              <!-- 歌手名 -->\r\n              <div class=\"singer\">{{ item.artistName }}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </el-tab-pane>\r\n    </el-tabs>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  // 导入 aixos\r\n  import axios from 'axios'\r\n  export default {\r\n    name: 'result',\r\n    data() {\r\n      return {\r\n        // tab切换时 会改变的数据\r\n        activeIndex: 'songs',\r\n        // 保存 查询歌曲\r\n        songList: [],\r\n        // 保存歌单的字段\r\n        playlists: [],\r\n        // 保存mv的字段\r\n        mv: [],\r\n        // 搜索结果的总数\r\n        count: 0\r\n      }\r\n    },\r\n    // 生命周期钩子 回调函数\r\n    created() {\r\n      axios({\r\n        url: 'https://autumnfish.cn/search',\r\n        method: 'get',\r\n        params: {\r\n          keywords: this.$route.query.q,\r\n          type: 1,\r\n          // 获取的数据量\r\n          limit: 10\r\n        }\r\n      }).then(res => {\r\n        console.log(res)\r\n        this.songList = res.data.result.songs\r\n        // 计算歌曲时间\r\n        for (let i = 0; i < this.songList.length; i++) {\r\n          let min = parseInt(this.songList[i].duration / 1000 / 60)\r\n          let sec = parseInt((this.songList[i].duration / 1000) % 60)\r\n          if (min < 10) {\r\n            min = '0' + min\r\n          }\r\n          if (sec < 10) {\r\n            sec = '0' + sec\r\n          }\r\n          // console.log(min + '|' + sec)\r\n          this.songList[i].duration = min + ':' + sec\r\n        }\r\n        // 保存总数\r\n        this.count = res.data.result.songCount\r\n      })\r\n    },\r\n    // 侦听器\r\n    watch: {\r\n      activeIndex() {\r\n        // songs 歌曲\r\n        // lists 歌单\r\n        // mv    mv\r\n        let type = 1\r\n\r\n        // 获取个数\r\n        let limit = 10\r\n        switch (this.activeIndex) {\r\n          case 'songs':\r\n            type = 1\r\n            limit = 10\r\n            break\r\n          case 'lists':\r\n            type = 1000\r\n            limit = 10\r\n            break\r\n          case 'mv':\r\n            type = 1004\r\n            limit = 8\r\n            break\r\n\r\n          default:\r\n            break\r\n        }\r\n\r\n        axios({\r\n          url: 'https://autumnfish.cn/search',\r\n          method: 'get',\r\n          params: {\r\n            keywords: this.$route.query.q,\r\n            type, // type:type,\r\n            // 获取的数据量\r\n            limit // limit: limit\r\n          }\r\n        }).then(res => {\r\n          console.log(res)\r\n          // 获取歌曲\r\n          if (type == 1) {\r\n            // 歌曲\r\n            this.songList = res.data.result.songs\r\n            // 计算歌曲时间\r\n            for (let i = 0; i < this.songList.length; i++) {\r\n              let min = parseInt(this.songList[i].duration / 1000 / 60)\r\n              let sec = parseInt((this.songList[i].duration / 1000) % 60)\r\n              if (min < 10) {\r\n                min = '0' + min\r\n              }\r\n              if (sec < 10) {\r\n                sec = '0' + sec\r\n              }\r\n              // console.log(min + '|' + sec)\r\n              this.songList[i].duration = min + ':' + sec\r\n            }\r\n            // 保存总数\r\n            this.count = res.data.result.songCount\r\n          }\r\n          // 获取 歌单\r\n          else if (type == 1000) {\r\n            // 歌单的逻辑\r\n            this.playlists = res.data.result.playlists\r\n            // 总数\r\n            this.count = res.data.result.playlistCount\r\n            // 处理 播放次数\r\n            for (let i = 0; i < this.playlists.length; i++) {\r\n              if (this.playlists[i].playCount > 100000) {\r\n                this.playlists[i].playCount =\r\n                  parseInt(this.playlists[i].playCount / 10000) + '万'\r\n              }\r\n            }\r\n          } else {\r\n            // 保存mv数据\r\n            this.mv = res.data.result.mvs\r\n            // 总数\r\n            this.count = res.data.result.mvCount\r\n            // 处理数据\r\n            for (let i = 0; i < this.mv.length; i++) {\r\n              // 时间\r\n              let min = parseInt(this.mv[i].duration / 1000 / 60)\r\n              let sec = parseInt((this.mv[i].duration / 1000) % 60)\r\n              if (min < 10) {\r\n                min = '0' + min\r\n              }\r\n              if (sec < 10) {\r\n                sec = '0' + sec\r\n              }\r\n              this.mv[i].duration = min + ':' + sec\r\n\r\n              // 播放次数\r\n              if (this.mv[i].playCount > 100000) {\r\n                this.mv[i].playCount =\r\n                  parseInt(this.mv[i].playCount / 10000) + '万'\r\n              }\r\n            }\r\n          }\r\n        })\r\n      }\r\n    },\r\n    // 方法\r\n    methods: {\r\n      // 去mv详情页\r\n      toMV(id){\r\n        this.$router.push(`/mv?q=${id}`)\r\n      },\r\n      // 去歌单详情页\r\n      toPlaylist(id){\r\n        // 跳转并携带数据即可\r\n        this.$router.push(`/playlist?q=${id}`)\r\n      },\r\n      playMusic(id) {\r\n        axios({\r\n          url: 'https://autumnfish.cn/song/url',\r\n          method: 'get',\r\n          params: {\r\n            id // id:id\r\n          }\r\n        }).then(res => {\r\n          // console.log(res)\r\n          let url = res.data.data[0].url\r\n          // console.log(this.$parent.musicUrl)\r\n          // 设置给父组件的 播放地址\r\n          this.$parent.musicUrl = url\r\n        })\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style></style>\r\n"]}]}